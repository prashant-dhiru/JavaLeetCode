//931. Minimum Falling Path Sum
class Solution {
    public int minFallingPathSum(int[][] A) {
        int size = A.length;
        int[][] dp = new int[size][size];
        dp[size-1] = A[size-1];
        
        for(int i=size-2; i>=0; i--){
            for(int j=0; j<size; j++){
                int tempMin = Integer.MAX_VALUE;
                for(int k=j-1; k<=j+1; k++){
                    if(k<0 || k>size-1 )
                        continue;
                    tempMin = Math.min(tempMin, dp[i+1][k]);
                    // System.out.println(tempMin);
                }
                dp[i][j] = A[i][j]+tempMin;
            }
        }
        int returnAns = Integer.MAX_VALUE;
        for(int i=0;i<size;i++){
            returnAns = Math.min(returnAns,dp[0][i]);
        }       
        return returnAns;
    }
}